datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model Prompt {
  id        String @id @default(uuid())
  // A human readable label that can be used to group Prompts.
  label     String
  // A sub-label for different variations of the same prompt.
  variant   String
  // The prompt template content.
  template  String
  // A system level message to prime an LLM.
  systemMessage String?
  // The created timestamp.  Used to order prompts with the same label and
  // variant values as different versions.
  createdAt DateTime @default(now())

  interaction InteractionLog[]
  chat        ChatLog[]
}

model InteractionLog {
  id        String @id @default(uuid())

  prompt    Prompt @relation(fields: [promptId], references: [id])
  promptId  String

  externalId String
  query     String
  result    Json[]
  model     String

  evaluation InteractionEvaluationLog[]

  createdAt DateTime @default(now())
}

model InteractionEvaluationLog {
  id             String @id @default(uuid())
  interaction    InteractionLog @relation(fields: [interactionId], references: [id])
  interactionId  String
  evaluationType String
  rating         String
}

model ChatLog {
  id            String @id @default(uuid())
  systemMessage String @default("")
  messages      Json[]
  interactionCount Int @default(-1)

  prompt    Prompt @relation(fields: [promptId], references: [id])
  promptId  String

  model     String

  evaluation ChatEvaluationLog[]
  createdAt DateTime @default(now())
}

model ChatEvaluationLog {
  id             String @id @default(uuid())
  chat           ChatLog @relation(fields: [chatId], references: [id])
  chatId         String
  evaluationType String
  rating         String
}
